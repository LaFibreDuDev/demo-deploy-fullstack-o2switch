"use strict";const h=require("express"),k=require("cookie-parser"),I=require("dotenv"),m=require("node:crypto"),C=require("jsonwebtoken"),B=require("jwt-decode"),w=require("swagger-ui-express"),L=require("swagger-jsdoc"),g=require("zod"),R=require("node:util"),u=require("sequelize");I.config();const q={url:process.env.SERVER_URL||`http://localhost:${process.env.PORT||3e3}`,host:process.env.HOST||"0.0.0.0",port:process.env.PORT||3e3,secure:process.env.SECURE||!1,cors:process.env.CORS||""},z={dialect:process.env.DATABASE_DIALECT||"postgres",database:process.env.DATABASE_DBNAME,user:process.env.DATABASE_USER,password:process.env.DATABASE_PASSWORD,host:process.env.DATABASE_HOST,port:process.env.DATABASE_PORT,ssl:process.env.DATABASE_SSL||!1},x={accessToken:{type:process.env.ACCESS_TOKEN_TYPE||"Bearer",algorithm:process.env.ACCESS_TOKEN_ALGORITHM||"HS256",secret:process.env.ACCESS_TOKEN_SECRET||"Acc3ssTok3nS3c3t!",expiresIn:process.env.ACCESS_TOKEN_EXPIRES_IN_MS||60*60*1e3,audience:process.env.ACCESS_TOKEN_AUDIENCE||"my_backend_api",issuer:process.env.ACCESS_TOKEN_ISSUER||"my_authentication_server"},crypto:{scrypt:{saltLength:process.env.SCRYPT_SALT_LENGTH||16,hashLength:process.env.SCRYPT_HASH_LENGTH||64,cost:process.env.SCRYPT_COST||Math.pow(2,17),blockSize:process.env.SCRYPT_BLOCK_SIZE||8,parallelization:process.env.SCRYPT_PARALLELIZATION||1,maxmem:process.env.SCRYPT_MAXMEM|134220800},unsaltedHashAlgorithm:process.env.FAST_HASH_ALGORITHM||"sha256"}},p={auth:x,database:z,server:q},{algorithm:O,audience:M,expiresIn:j,issuer:U,secret:D,type:H}=p.auth.accessToken;function $(t){const e={id:t.id,username:t.username};return{accessToken:{token:G(e),type:H,expiresAt:Y(j),expiresInMS:j}}}function G(t){return C.sign(t,D,{algorithm:O,audience:M,expiresIn:j,issuer:U})}function K(t){try{return C.verify(t,D,{algorithms:O})}catch(e){return console.error(e),null}}function Y(t){return new Date(new Date().valueOf()+t)}async function J(t){const e=R.promisify(m.scrypt),{saltLength:s,hashLength:o,cost:r,blockSize:a,parallelization:n,maxmem:i}=p.auth.crypto.scrypt,l=m.randomBytes(s).toString("hex");return`${(await e(t,l,o,{cost:r,blockSize:a,parallelization:n,maxmem:i})).toString("hex")}.${l}`}async function W(t,e){const[s,o]=e.split("."),r=Buffer.from(s,"hex"),a=R.promisify(m.scrypt),{hashLength:n,cost:i,blockSize:l,parallelization:d,maxmem:y}=p.auth.crypto.scrypt,E=await a(t,o,n,{cost:i,blockSize:l,parallelization:d,maxmem:y});return m.timingSafeEqual(r,E)}const{dialect:X,database:Z,user:F,password:V,host:Q,port:ee}=p.database,N=new u.Sequelize({dialect:X,database:Z,username:F,password:V,host:Q,port:ee,ssl:!1,clientMinMessages:"notice"});class T extends u.Model{}T.init({username:{type:u.DataTypes.STRING},email:{type:u.DataTypes.STRING,unique:!0},password:{type:u.DataTypes.STRING}},{sequelize:N,timestamps:!0,tableName:"Users"});class v{static async signupUser(e,s){const{data:o,error:r}=await this.buildSignupBodySchema().safeParseAsync(e.body);if(r)return s.status(400).json({status:400,message:r.message});const{username:a,email:n,password:i}=o;if(await T.count({where:{email:n}})!==0)return s.status(409).json({status:409,message:"Provided email already in use"});await T.create({username:a,email:n,password:await J(i)}),s.status(201).json({status:201,message:"User successfully created"})}static async loginUser(e,s){const{data:o,error:r}=await buildLoginBodySchema().safeParseAsync(e.body);if(r)return s.status(400).json({status:400,message:r.message});const{email:a,password:n}=o,i=await T.findOne({where:{email:a}});if(!i)return s.status(401).json({status:401,message:"Bad credentials"});if(!await W(n,i.password))return s.status(401).json({status:401,message:"Bad credentials"});const{accessToken:d}=$(i);console.log("CSRF TOKEN GENERE PENDANT LA CONNEXION"),console.log(d),this.sendTokensResponse(s,{user:i,accessToken:d})}static async logout(e,s){s.status(204).json({status:204,message:"Successfully logged out"})}buildSignupBodySchema(){return g.z.object({username:g.z.string().min(1),email:g.z.string().min(1).email(),password:g.z.string().min(8)})}buildLoginBodySchema(){return g.z.object({email:g.z.string().email(),password:g.z.string()})}sendTokensResponse(e,{user:s,accessToken:o,refreshToken:r,csrfToken:a}){e.json({username:s.username,accessToken:o.token,accessTokenType:o.type,accessTokenExpiresAt:o.expiresAt})}}const S=h();S.post("/signup",v.signupUser);S.post("/login",v.loginUser);S.delete("/logout",v.logout);class f extends u.Model{}f.init({name:{type:u.DataTypes.STRING},description:{type:u.DataTypes.STRING},image:{type:u.DataTypes.STRING}},{sequelize:N,tableName:"Projects"});class P{static async getAllProjects(e,s){try{const o=await f.findAll();s.status(200).json(o)}catch(o){console.error("Error fetching projects:",o),s.status(500).json({error:"An error occurred while fetching projects."})}}static async getProjectById(e,s){const{id:o}=e.params;try{const r=await f.findByPk(o);if(!r)return s.status(404).json({error:"Project not found."});s.status(200).json(r)}catch(r){console.error(`Error fetching project with ID ${o}:`,r),s.status(500).json({error:"An error occurred while fetching the project."})}}static async addProject(e,s){try{const{name:o,description:r,image:a}=e.body;if(!o)return s.status(400).json({error:'Le champ "name" est obligatoire.'});const n=await f.create({name:o,description:r,image:a});return s.status(201).json({message:"Projet cr√©√© avec succ√®s !",project:n})}catch(o){return console.error("Erreur lors de la cr√©ation du projet :",o),s.status(500).json({error:"Une erreur est survenue lors de la cr√©ation du projet."})}}}const A=h();A.get("/",P.getAllProjects);A.get("/:id",P.getProjectById);A.post("/",P.addProject);typeof PhusionPassenger<"u"&&PhusionPassenger.configure({autoInstall:!1});const c=h();c.use("/",h.static("client"));const{url:_,cors:se}=p.server,te={swaggerDefinition:{openapi:"3.0.0",info:{title:"API Documentation",version:"1.0.0",description:"Documentation interactive pour mon API"},servers:[{url:_,description:`API Serveur - ${_}`}]},apis:["./src/routes/*.js"]},oe=L(te);c.use("/api-docs",w.serve,w.setup(oe));c.use(h.urlencoded({extended:!0}));c.use(h.json());c.use((t,e,s)=>{e.header("Access-Control-Allow-Origin",[se]),e.header("Access-Control-Allow-Headers","Content-Type, Accept, Authorization"),e.header("Access-Control-Allow-Methods","GET, POST, OPTIONS, PUT, PATCH, DELETE"),e.header("Access-Control-Allow-Credentials",!0),t.method==="OPTIONS"?e.sendStatus(200):s()});c.use(k());c.get("/config",(t,e)=>{const{dialect:s,database:o,user:r,_:a,dbhost:n}=p.database,{url:i,host:l,port:d,secure:y,cors:E}=p.server;e.status(200).json({url:i,host:l,port:d,secure:y,cors:E,dialect:s,database:o,user:r,dbhost:n})});c.use("/",S);c.use("/projects",A);c.get("/public-stuff",re);c.get("/private-stuff",b,ne);c.get("/profile",b,ae);if(typeof PhusionPassenger<"u")c.listen("passenger");else{const{port:t,host:e}=p.server;c.listen(t,e,()=>{console.log(`üöÄ Server listening on http://${e}:${t}`)})}function b(t,e,s){var a,n;console.log("Traitement de la requ√™te en cours ...");const o=(n=(a=t.headers)==null?void 0:a.authorization)==null?void 0:n.split("Bearer ")[1];if(!o)return e.status(401).json({status:401,message:"No access token provided in request headers"});if(console.log("V√©rification du token en cours ..."),!K(o))return e.status(401).json({status:401,message:"Invalid access token"});console.log("Requete accept√©e (JWT TOKEN)"),t.accessToken=o,s()}function re(t,e){e.json({status:200,message:"This is some public resource."})}function ne(t,e){console.log(`JWT r√©cup√©r√© depuis la requ√™te : ${t.accessToken}`),console.log(`R√©cup√©ration de l'id : ${B.jwtDecode(t.accessToken).id}`),e.status(200).json({status:200,message:"This is some private resource"})}function ae(t,e){const s={address:{lastname:"DARK",firstname:"Enzo",streetAddress:"1 rue du fleuve",postCode:"57000",city:"METZ"}};e.status(200).json({status:200,data:s})}
